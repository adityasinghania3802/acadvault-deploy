name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  MONGODB_CONNECTION_STRING: ${{ secrets.MONGODB_CONNECTION_STRING }}
  AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
  AUTH0_ISSUER_BASE_URL: ${{ secrets.AUTH0_ISSUER_BASE_URL }}
  VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
  VITE_AUTH0_DOMAIN: ${{ secrets.VITE_AUTH0_DOMAIN }}
  VITE_AUTH0_CLIENT_ID: ${{ secrets.VITE_AUTH0_CLIENT_ID }}
  VITE_AUTH0_CALLBACK_URL: ${{ secrets.VITE_AUTH0_CALLBACK_URL }}
  VITE_AUTH0_AUDIENCE: ${{ secrets.VITE_AUTH0_AUDIENCE }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Client
        working-directory: ./frontend
        run: |
          npm install
          npm run test

      - name: Install Server
        working-directory: ./backend
        run: |
          npm install
          npm run test

      - name: Build Client Docker Image
        working-directory: ./frontend
        run: |
          docker build \
          --build-arg VITE_API_BASE_URL=$VITE_API_BASE_URL \
          --build-arg VITE_AUTH0_DOMAIN=$VITE_AUTH0_DOMAIN \
          --build-arg VITE_AUTH0_CLIENT_ID=$VITE_AUTH0_CLIENT_ID \
          --build-arg VITE_AUTH0_CALLBACK_URL=$VITE_AUTH0_CALLBACK_URL \
          --build-arg VITE_AUTH0_AUDIENCE=$VITE_AUTH0_AUDIENCE \
          -t bmpcourse/acadvault-deploy:frontend-${{github.run_number}} \
          -t bmpcourse/acadvault-deploy:frontend-latest .

      - name: Build Server Docker Image
        working-directory:
          ./backend
        run: |
          docker build \
          --build-arg MONGODB_CONNECTION_STRING=$MONGODB_CONNECTION_STRING \
          --build-arg AUTH0_AUDIENCE=$AUTH0_AUDIENCE \
          --build-arg AUTH0_ISSUER_BASE_URL=$AUTH0_ISSUER_BASE_URL \
          -t bmpcourse/acadvault-deploy:backend-${{github.run_number}} \
          -t bmpcourse/acadvault-deploy:backend-latest .

      # Build a Docker image for the NGINX reverse proxy
      - name: Build NGINX Docker Image
        working-directory: ./nginx
        # Build image with tag rakeshpotnuru/productivity-app:nginx
        run: |
          docker build -t bmpcourse/acadvault-deploy:nginx-${{github.run_number}} -t bmpcourse/acadvault-deploy:nginx-latest .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Push Docker Images to Docker Hub
        run: |
          docker push bmpcourse/acadvault-deploy:frontend-${{github.run_number}}
          docker push bmpcourse/acadvault-deploy:backend-${{github.run_number}}
          docker push bmpcourse/acadvault-deploy:nginx-${{github.run_number}}
          docker push bmpcourse/acadvault-deploy:frontend-latest
          docker push bmpcourse/acadvault-deploy:backend-latest
          docker push bmpcourse/acadvault-deploy:nginx-latest
      # This is the step that is deploying the application to Elastic Beanstalk.
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APP_NAME }}
          environment_name: ${{ secrets.EB_ENV_NAME }} 
          region: ${{ secrets.EB_REGION }}
          version_label: "version-${{ github.run_number }}"
          deployment_package: docker-compose.yml